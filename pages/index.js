import Head from "next/head";
import { useState } from "react";
import { EditWords } from "../utils";
import { Word as WordComponent, Header, Error } from "../components";

export default function Home() {
  const [text, setText] = useState("");
  const [fileName, setFileName] = useState(null);
  const [error, setError] = useState(null);
  const [type, setType] = useState("text/plain");

  const clearError = () => {
    setError(null);
  };

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    if (file) {
      reader.readAsText(file);

      if (file.type === "application/json" && type === file.type) {
        reader.onload = () => {
          const jsonContent = JSON.parse(reader.result);
          if (jsonContent.text) {
            setText(jsonContent.text);
            setFileName(file.name);
          } else {
            setError("JSON file does not contain 'text' as a key");
          }
        };
      } else if (file.type === "text/plain" && type === file.type) {
        reader.onload = () => {
          setText(reader.result);
          setFileName(file.name);
        };
      } else {
        setError("File format not selected");
      }
      reader.onerror = () => {
        setError(reader.error);
      };
    }
  };
  const editedWords = new EditWords(text);

  return (
    <div className="w-full container flex flex-col mx-auto h-screen px-3 pt-20 md:px-20 lg:px-40 space-y-3">
      <Head>
        <title>Knowledgator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      {error && <Error clear={clearError}>{error}</Error>}

      {text ? (
        <div className="space-y-3">
          <div className="w-full inline-flex justify-between items-center">
            <div onChange={handleFileChange} className="h-10 btn-file">
              Upload File
              <input type="file" />
            </div>
            <select
              defaultValue={type}
              onChange={(e) => setType(e.target.value)}
              className="border-b-2 border-b-blue-500 cursor-pointer"
            >
              <option value="text/plain">.TXT</option>
              <option value="application/json">.JSON</option>
            </select>
          </div>

          <div className="text-lg md:text-xl font-medium">
            Filename: {fileName}
          </div>

          <div className="w-full max-h-[60vh] flex flex-wrap p-3 bg-gray-100 border-2 border-blue-500 rounded overflow-y-auto transition-all">
            {text.split(" ").map((text, index) => (
              <WordComponent
                key={index}
                id={index}
                text={text}
                setText={setText}
                editedWords={editedWords}
              />
            ))}
          </div>

          <button
            onClick={() => editedWords.exportData()}
            className="md:w-1/3 bg-blue-500 text-white md:text-2xl px-5 py-2 rounded"
          >
            Export to JSON
          </button>
        </div>
      ) : (
        <div className="w-full h-full flex flex-col justify-center items-center space-y-5">
          <div className="inline-flex items-end space-x-3">
            <p className="font-medium">Select file type:</p>
            <select
              defaultValue={type}
              onChange={(e) => setType(e.target.value)}
              className="border-b-2 border-b-blue-500 cursor-pointer"
            >
              <option value="text/plain">.TXT</option>
              <option value="application/json">.JSON</option>
            </select>
          </div>

          <div onChange={handleFileChange} className="btn-file">
            Upload File
            <input type="file" />
          </div>
        </div>
      )}
    </div>
  );
}

